--- interpreter/Python-3.6.8/Python/random.c	2018-12-23 22:37:14.000000000 +0100
+++ python_patches/random.c	2019-05-28 17:25:20.919012672 +0200
@@ -24,6 +24,12 @@
 #  include <sanitizer/msan_interface.h>
 #endif
 
+#ifdef _3DS
+#include "3ds/types.h"
+#include "3ds/result.h"
+#include "3ds/services/ps.h"
+#endif
+
 #ifdef Py_DEBUG
 int _Py_HashSecret_Initialized = 0;
 #else
@@ -268,6 +274,53 @@
 }
 #endif /* defined(HAVE_GETENTROPY) && !defined(sun) */
 
+#ifdef _3DS
+
+static int
+ctr_urandom_init(int raise)
+{
+    Result res = 0;
+
+    res = psInit();
+    if (R_SUCCEEDED(res))
+        return 0;
+
+    if (raise)
+        PyErr_SetString(PyExc_RuntimeError,
+                        "3DS: Failed to get pxi:ps9 service handle.");
+    else
+        Py_FatalError("3DS: Failed to get pxi:ps9 service handle.");
+
+    return -1;
+
+}
+
+static int
+ctr_urandom(unsigned char *buffer, Py_ssize_t size, int raise)
+{
+    Result res = 0;
+
+    if (!psGetSessionHandle())
+        ctr_urandom_init(raise);
+
+    res = PS_GenerateRandomBytes(buffer, (size_t)size);
+
+    psExit();
+
+    if (R_SUCCEEDED(res))
+        return 0;
+
+    if (raise)
+        PyErr_SetString(PyExc_RuntimeError,
+                        "3DS: GenerateRandomBytes failed.");
+    else
+        Py_FatalError("3DS: GenerateRandomBytes failed.");
+
+    return -1;
+}
+
+#endif
+
 
 static struct {
     int fd;
@@ -514,6 +567,10 @@
        ENOSYS or EPERM. Fall back on reading from /dev/urandom. */
 #endif
 
+#ifdef _3DS
+    return ctr_urandom(buffer, size, raise);
+#endif
+
     return dev_urandom(buffer, size, raise);
 #endif
 }
